#         git rm -f seq.dat
#         git commit -m "remove seq.dat"
#         git rm -f seq.dat.ss
#         git commit -m "remove seq.dat.ss"
#         git rm -f psitmp.aux
#         git commit -m "remove psitmp.aux"
#         git rm -f pssm.txt
#         git commit -m "remove pssm.txt"
#         git rm -f psitmp.chk
#         git commit -m "remove psitmp.chk"
#         git rm -f psitmp.fasta
#         git commit -m "remove psitmp.fasta"
#         git rm -f psitmp.mn
#         git commit -m "remove psitmp.mn"
#         git rm -f psitmp.mtx
#         git commit -m "remove psitmp.mtx"
#         git rm -f psitmp.pn
#         git commit -m "remove pstimp.pn"
#         git rm -f freqccw
#         git commit -m "remove freqccw"
#         git rm -f freqccwG
#         git commit -m "remove freqccwG"
#         git rm -f mtx
#         git commit -m "remove mtx"
#         git rm -f profw
#         git commit -m "remove profw"
#         git rm -f output1.ss
#         git commit -m "remove output1.ss"
#         git rm -f output2.ss
#         git commit -m "remove output1.ss"
#         git rm -f output3.ss
#         git commit -m "remove output3.ss"
#         git rm -f output4.ss
#         git commit -m "remove output4.ss"
#         git rm -f output5.ss
#         git commit -m "remove output5.ss"
#         git rm -f output6.ss
#         git commit -m "remove output6.ss"
#         git rm -f output7.ss
#         git commit -m "remove output7.ss" 
name: PSSpred

on:
  push:
    branches:
      - master

jobs:
  build_docs_and_deploy:
    runs-on: ubuntu-latest
    name: running PSSpred

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: running psspred
      run: |
         git config --global user.email "ucecwme@ucl.ac.uk"
         git config --global user.name "nickcafferry"
         git init
         echo "Initializing the program....................."
         
         echo "---------------------------------------------"
         cd ../
         mkdir output
         echo "output file already created!"
         
         echo "---------------------------------------------"
         cd PSSpred/
         cd src/
         mkdir nr
         cd nr/
         wget -O nr.tar.gz https://zhanglab.ccmb.med.umich.edu/cgi-bin/download_ftp.cgi?ID=nr.tar.gz
         tar -xvf nr.tar.gz
         echo "nr.tar.gz already unpacked!"
         echo "Show the path of this file: "
         pwd
         echo "---------------------------------------------"
         
         echo "transporting new outputs to artifacts..."
         cd ../
         cd PSSpred_v4/
         ./PSSpred.pl seq.fasta
         echo "Showing the output files:"
         ls -lt
         cp seq.dat /home/runner/work/PSSpred/output/
         cp seq.dat.ss /home/runner/work/PSSpred/output/
         cp blast.out /home/runner/work/PSSpred/output/
         
         echo "deleting previous output results..."
         cd ../../output\ results/
         if [ -f "seq.dat" ];then
           git rm -f seq.dat
           git commit -m "remove seq.dat"
           else
           echo "passing"
         fi
         if [ -f "seq.dat.ss" ];then
           git rm -f seq.dat.ss
           git commit -m "remove seq.dat.ss"
           else
           echo "passing"
         fi
         
         if [ -f "psitmp.aux" ];then
           git rm -f psitmp.aux
           git commit -m "remove psitmp.aux"
           else
           echo "passing"
         fi
         
         if [ -f "pssm.txt" ];then
           git rm -f pssm.txt
           git commit -m "remove pssm.txt"
           else
           echo "passing"
         fi
         
         if [ -f "psitmp.chk" ];then
           git rm -f psitmp.chk
           git commit -m "remove psitmp.chk"
           else
           echo "passing"
         fi
         
         if [ -f "psitmp.fasta" ];then
           git rm -f psitmp.fasta
           git commit -m "remove psitmp.fasta"
           else
           echo "passing"
         fi
         
         if [ -f "psitmp.mn" ];then
           git rm -f psitmp.mn
           git commit -m "remove psitmp.mn"
           else
           echo "passing"
         fi
         
         if [ -f "psitmp.mtx" ];then
           git rm -f psitmp.mtx
           git commit -m "remove psitmp.mtx"
           else
           echo "passing"
         fi
         
         if [ -f "psitmp.pn" ];then
           git rm -f psitmp.pn
           git commit -m "remove pstimp.pn"
           else
           echo "passing"
         fi
         
         if [ -f "freqccw" ];then
           git rm -f freqccw
           git commit -m "remove freqccw"
           else
           echo "passing"
         fi
         
         if [ -f "freqccwG" ];then
           git rm -f freqccwG
           git commit -m "remove freqccwG"
           else
           echo "passing"
         fi
         
         if [ -f "mtx" ];then
           git rm -f mtx
           git commit -m "remove mtx"
           else
           echo "passing"
         fi
        
         if [ -f "profw" ];then
           git rm -f profw
           git commit -m "remove profw"
           else
           echo "passing"
         fi
         
         if [ -f "output1.ss" ];then
           git rm -f output1.ss
           git commit -m "remove output1.ss"
           else
           echo "passing"
         fi
         
         if [ -f "output2.ss" ];then
           git rm -f output2.ss
           git commit -m "remove output2.ss"
           else
           echo "passing"
         fi
         
         if [ -f "output3.ss" ];then
           git rm -f output3.ss
           git commit -m "remove output3.ss"
           else
           echo "passing"
         fi 
  
         if [ -f "output4.ss" ];then
           git rm -f output4.ss
           git commit -m "remove output4.ss"
           else
           echo "passing"
         fi

         if [ -f "output5.ss" ];then
           git rm -f output5.ss
           git commit -m "remove output5.ss"
           else
           echo "passing"
         fi
         
         if [ -f "output6.ss" ];then
           git rm -f output6.ss
           git commit -m "remove output6.ss"
           else
           echo "passing"
         fi    
         
         if [ -f "output7.ss" ];then
           git rm -f output7.ss
           git commit -m "remove output7.ss"
           else
           echo "passing"
         fi         

         git push origin master
         
         echo "moving new results to the file output results..."
         cd ../src/PSSpred_v4/
         cp -f seq.dat ../../output\ results/
         cp -f seq.dat.ss ../../output\ results/
         cp -f psitmp.aux ../../output\ results/
         cp -f pssm.txt ../../output\ results/
         cp -f psitmp.chk ../../output\ results/
         cp -f psitmp.fasta ../../output\ results/         
         cp -f psitmp.mn ../../output\ results/
         cp -f psitmp.mtx ../../output\ results/
         cp -f psitmp.pn ../../output\ results/   
         cp -f freqccw ../../output\ results/
         cp -f freqccwG ../../output\ results/
         cp -f mtx ../../output\ results/  
         cp -f profw ../../output\ results/
         
         if [ -f "output1.ss" ];then
           echo "output1.ss exists, deliver it to output results..."
           cp -f output1.ss ../../output\ results/
           else
           echo "output1.ss doesn't exists"
         fi
         if [ -f "output2.ss" ];then
           echo "output2.ss exists, deliver it to output results..."
           cp -f output2.ss ../../output\ results/
           else
           echo "output2.ss doesn't exists"
         fi         
         if [ -f "output3.ss" ];then
           echo "output3.ss exists, deliver it to output results..."
           cp -f output3.ss ../../output\ results/
           else
           echo "output3.ss doesn't exists"
         fi
         if [ -f "output4.ss" ];then
           echo "output4.ss exists, deliver it to output results..."
           cp -f output4.ss ../../output\ results/
           else
           echo "output4.ss doesn't exists"
         fi
         if [ -f "output5.ss" ];then
           echo "output5.ss exists, deliver it to output results..."
           cp -f output5.ss ../../output\ results/
           else
           echo "output5.ss doesn't exists"
         fi
         if [ -f "output6.ss" ];then
           echo "output6.ss exists, deliver it to output results..."
           cp -f output6.ss ../../output\ results/
           else
           echo "output6.ss doesn't exists"
         fi
         if [ -f "output7.ss" ];then
           echo "output7.ss exists, deliver it to output results..."
           cp -f output7.ss ../../output\ results/
           else
           echo "output7.ss doesn't exists"
         fi   
         cd ../../output\ results/ 

         echo "pushing to github repository..."
         git add seq.dat
         git commit -m "Add seq.dat"
         git add seq.dat.ss
         git commit -m "Add seq.dat.ss"
         git add psitmp.aux
         git commit -m "Add psitmp.aux"
         git add pssm.txt
         git commit -m "add pssm.txt"
         git add psitmp.chk
         git commit -m "add psitmp.chk"
         git add psitmp.fasta
         git commit -m "add psitmp.fasta"
         git add psitmp.mn
         git commit -m "add psitmp.mn"
         git add psitmp.mtx
         git commit -m "add psitmp.mtx"
         git add psitmp.pn
         git commit -m "add pstimp.pn"
         git add freqccw
         git commit -m "add freqccw"
         git add freqccwG
         git commit -m "add freqccwG"
         git add mtx
         git commit -m "add mtx"
         git add profw
         git commit -m "add profw"

         if [ -f "output1.ss" ];then
           echo "output1.ss exists, deliver it to the project..."
           git add output1.ss
           git commit -m "add output1.ss"  
           else
           echo "output1.ss doesn't exists"
         fi
         if [ -f "output2.ss" ];then
           echo "output2.ss exists, deliver it to the project..."
           git add output2.ss
           git commit -m "add output2.ss" 
           else
           echo "output2.ss doesn't exists"
         fi         
         if [ -f "output3.ss" ];then
           echo "output3.ss exists, deliver it to the project..."
           git add output3.ss
           git commit -m "add output3.ss" 
           else
           echo "output3.ss doesn't exists"
         fi
         if [ -f "output4.ss" ];then
           echo "output4.ss exists, deliver it to the project..."
           git add output4.ss
           git commit -m "add output4.ss" 
           else
           echo "output4.ss doesn't exists"
         fi
         if [ -f "output5.ss" ];then
           echo "output5.ss exists, deliver it to the project..."
           git add output5.ss
           git commit -m "add output5.ss" 
           else
           echo "output5.ss doesn't exists"
         fi
         if [ -f "output6.ss" ];then
           echo "output6.ss exists, deliver it to the project..."
           git add output6.ss
           git commit -m "add output6.ss" 
           else
           echo "output6.ss doesn't exists"
         fi
         if [ -f "output7.ss" ];then
           echo "output7.ss exists, deliver it to the project..."
           git add output7.ss
           git commit -m "add output7.ss" 
           else
           echo "output7.ss doesn't exists"
         fi 
         
         cd /home/runner/work/PSSpred/PSSpred/
         git push origin master
        
         echo "checking the artifacts..."
         cd /home/runner/work/PSSpred/output/
         ls
         pwd
         
    - uses: actions/upload-artifact@v2
      with:
        name: output results
        path: /home/runner/work/PSSpred/output/       
         
         

